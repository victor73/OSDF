{
  "name": "elastical",
  "description": "An ElasticSearch client.",
  "version": "0.0.13",
  "homepage": "https://github.com/ramv/node-elastical/",
  "author": {
    "name": "Ryan Grove",
    "email": "ryan@wonko.com",
    "url": "http://wonko.com/"
  },
  "copyright": "Copyright (c) 2013 Ryan Grove. All rights reserved.",
  "keywords": [
    "elasticsearch",
    "elastic",
    "search",
    "client",
    "lucene"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ramv/node-elastical/blob/master/LICENSE.md"
    }
  ],
  "repository": [
    {
      "type": "git",
      "url": "git://github.com/ramv/node-elastical.git"
    }
  ],
  "engines": [
    "node >=0.4.0",
    "npm >=1.0.0"
  ],
  "dependencies": {
    "request": ">=2.9.200",
    "diff": ">=1.0.3"
  },
  "devDependencies": {
    "vows": "*"
  },
  "main": "index",
  "scripts": {
    "test": "node_modules/.bin/vows tests/offline-tests.js"
  },
  "readme": "Elastical\n=========\n\nElastical is a Node.js client library for the\n[ElasticSearch](http://www.elasticsearch.org) REST API.\n\nIt's not quite finished, but what's done so far has doc comments and unit tests.\nKeep an eye on this repo for updates.\n\n\nInstalling\n----------\n\nLatest released version:\n\n    npm install elastical\n\nLatest dev code:\n\n    npm install https://github.com/rgrove/node-elastical/tarball/master\n\n\nBasic Usage\n-----------\n\nRequire elastical:\n\n```js\nvar elastical = require('elastical');\n```\n\nInstantiate an Elastical client that will connect to http://127.0.0.1:9200:\n\n```js\nvar client = new elastical.Client();\n```\n\nOr specify a custom host and port:\n\n```js\nvar client = new elastical.Client('example.com', {port: 1234});\n```\n\nIndex a document:\n\n```js\n// Specify the index name, document type, and document to index.\nclient.index('blog', 'post', {\n    title: \"Welcome to my stupid blog\",\n    body : \"This is the only thing I'll ever post.\",\n    tags : [\"welcome\", \"first post\", \"last post\"]\n}, function (err, res) {\n    // `err` is an Error, or `null` on success.\n    // `res` is the parsed ElasticSearch response data.\n});\n```\n\nRetrieve a previously-indexed document by id:\n\n```js\n// Specify the index and the document id.\nclient.get('blog', '42', function (err, doc, res) {\n    // `err` is an Error, or `null` on success.\n    // `doc` is the parsed document data.\n    // `res` is the full parsed ElasticSearch response data.\n});\n```\n\nPerform a search:\n\n```js\n// Simple string query (automatically turned into a query_string query).\nclient.search({query: 'welcome'}, function (err, results, res) {\n    // `err` is an Error, or `null` on success.\n    // `results` is an object containing search hits.\n    // `res` is the full parsed ElasticSearch response data.\n});\n\n// Custom query options (this is equivalent to the previous example, just\n// without the magic).\nclient.search({\n    query: {query_string: {query: 'welcome'}}\n}, function (err, results, res) {\n    // ...\n});\n```\n\nSee the doc comments in the source for more details on available methods and\noptions.\n\n\nDeveloping\n----------\n\nFork the git repo, clone it, then install the dev dependencies.\n\n    cd elastical\n    npm install\n\nMake your changes, add tests, then run the tests to make sure nothing broke.\n\n    make test\n\nThis will run both offline and online tests. Online tests require an\nElasticSearch server running at http://127.0.0.1:9200/. If you only want to run\nthe offline tests (which don't require a server), run:\n\n    make offline-tests\n\n\nPull Requests\n-------------\n\nBefore embarking on any major changes, please drop me a note first just to make\nsure I'm not already working on something similar. This could save us both some\ntrouble.\n\nPlease make your changes in a topic branch and submit a pull request describing\nwhat the changes do and why I should merge them. Save time by including good\noffline and online tests for your changes (if you don't, I'll just ask you to\nadd them). Thanks!\n\n\nSupport\n-------\n\nNope.\n\n\nLicense\n-------\n\nCopyright (c) 2012 Ryan Grove (ryan@wonko.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "elastical@0.0.13",
  "dist": {
    "shasum": "27f7e35a813ef8c49f6ed5d6027d7147102acc35"
  },
  "_from": "elastical@0.0.13",
  "_resolved": "https://registry.npmjs.org/elastical/-/elastical-0.0.13.tgz"
}
