<?xml version="1.0" encoding="utf-8"?>
<project name="OSDF" basedir="." default="package">
    <property name="dist.dir" value="dist"/>
    <property name="build.dir" value="build"/>
    <property name="lib.dir" value="lib"/>
    <property name="bin.dir" value="bin"/>
    <property name="conf.dir" value="conf"/>

    <!-- Project specific properties -->
    <property name="app.name" value="${ant.project.name}"/>
    <property name="app.name.lc" value="osdf"/>
    <property name="app.version" value="0.1"/>
    <property name="app.packager" value="Victor Felix &lt;vfelix@som.umaryland.edu&gt;"/>

    <target name="prepare" description="Creates the necessary directories for building.">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="clean" description="Returns the distribution to a pristine state.">
        <delete dir="${dist.dir}"/>
        <delete dir="${build.dir}"/>
    </target>

    <target name="package" depends="prepare" description="Generates the project distribution.">
        <tar destfile="${dist.dir}/${app.name.lc}-${app.version}.tar.gz" compression="gzip">
          <tarfileset dir="." prefix="${app.name.lc}-${app.version}">
            <include name="*.js"/>
          </tarfileset>
          <tarfileset dir="." prefix="${app.name.lc}-${app.version}">
            <include name="nodelint.conf"/>
          </tarfileset>
          <tarfileset dir="logs" prefix="${app.name.lc}-${app.version}/logs">
            <exclude name="*.log"/>
          </tarfileset>
          <tarfileset dir="bin" prefix="${app.name.lc}-${app.version}/bin"/>
          <tarfileset dir="lib" prefix="${app.name.lc}-${app.version}/lib"/>
          <tarfileset dir="conf" prefix="${app.name.lc}-${app.version}/conf"/>
          <tarfileset dir="working" prefix="${app.name.lc}-${app.version}/working"/>
          <tarfileset dir="node_modules" prefix="${app.name.lc}-${app.version}/node_modules"/>
          <tarfileset dir="docs" prefix="${app.name.lc}-${app.version}/docs"/>
          <tarfileset dir="test" prefix="${app.name.lc}-${app.version}/test"/>
          <tarfileset dir="rpm" prefix="${app.name.lc}-${app.version}/rpm"/>
        </tar>

        <echo>Done. Check the "dist" directory for the disribution file.</echo>
    </target>

    <target name="rpm_prep" depends="prepare" description="Creates the file structure necessary for rpm creation.">
        <mkdir dir="${build.dir}/rpm"/>
        <mkdir dir="${build.dir}/rpm/SPECS"/>
        <mkdir dir="${build.dir}/rpm/SOURCES"/>
        <mkdir dir="${build.dir}/rpm/SRPMS"/>
        <mkdir dir="${build.dir}/rpm/RPMS"/>
        <mkdir dir="${build.dir}/rpm/BUILD"/>
    </target>

    <target name="rpm" depends="rpm_prep,package" description="Creates an rpm package for the application.">
       <copy file="rpm/${app.name.lc}.spec.template" tofile="${build.dir}/rpm/SPECS/${app.name.lc}.spec"/>
       <replace file="${build.dir}/rpm/SPECS/${app.name.lc}.spec" token="@name@" value="${app.name}"/>
       <replace file="${build.dir}/rpm/SPECS/${app.name.lc}.spec" token="@lc_name@" value="${app.name.lc}"/>
       <replace file="${build.dir}/rpm/SPECS/${app.name.lc}.spec" token="@version@" value="${app.version}"/>
       <replace file="${build.dir}/rpm/SPECS/${app.name.lc}.spec" token="@packager@" value="${app.packager}"/>

       <copy file="${dist.dir}/${app.name.lc}-${app.version}.tar.gz" todir="${build.dir}/rpm/SOURCES"/>
       <rpm specFile="${app.name.lc}.spec" topDir="${build.dir}/rpm" cleanBuildDir="true" failOnError="true"/>

       <copy overwrite="true" todir="${dist.dir}">
           <fileset dir="${build.dir}/rpm/RPMS/noarch/"/>
       </copy>
       <echo>RPM file created. Please check the ${dist.dir} directory."</echo>
    </target>

</project>
